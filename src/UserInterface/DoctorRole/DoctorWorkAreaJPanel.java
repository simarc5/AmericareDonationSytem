/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.DoctorRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.DoctorOrganization;
import Business.Organization.LabOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DoctorWorkRequest;
import Business.WorkQueue.LabWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author deepankkhurana
 */
public class DoctorWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DoctorWorkAreaJPanel
     */
    private final JPanel userProcessContainer;
    private final UserAccount account;
    private final DoctorOrganization organization;
    private final Enterprise enterprise;
    private final EcoSystem system;
    private final Network network;

    public DoctorWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, DoctorOrganization organization, Enterprise enterprise, EcoSystem system, Network network) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.organization = organization;
        this.enterprise = enterprise;
        this.system = system;
        this.network = network;

        try {
            orgLbl.setText(organization.getName());
            networkLbl.setText(network.getName());

            btnSend.setEnabled(false);

            
            populateWorkRequestJTable();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Something went wrong..");
        }
    }

    public void populateWorkRequestJTable() {
        try {
            DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();
            model.setRowCount(0);
            System.out.println(organization.getWorkQueue().getDoctorWorkRequestList().size());
            for (DoctorWorkRequest req : organization.getWorkQueue().getDoctorWorkRequestList()) {
                System.out.println(req.getNetwork());
                System.out.println(network);
                System.out.println(network.getName());
                if (req.getNetwork().equals(network.getName())) {
                    Object[] row = new Object[4];
                    row[0] = req;
                    row[1] = req.getDescription();
                    row[2] = req.getRequestedBy();
                    row[3] = req.getReceiver() == null ? null : req.getReceiver().getEmployee().getName();
                    model.addRow(row);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Something went wrong..");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        orgLbl = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        networkLbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        btnSend = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btnTrack = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        btnAccept = new javax.swing.JButton();
        backgroundLbl = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 140, 190));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Organization");

        orgLbl.setBackground(new java.awt.Color(0, 140, 190));
        orgLbl.setForeground(new java.awt.Color(255, 255, 255));
        orgLbl.setText("<organizationName>");

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel3.setText("Network");

        networkLbl.setText("<NetworkName>");

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Donation At", "Description", "Requested By", "Accepted By"
            }
        ));
        jScrollPane1.setViewportView(workRequestJTable);

        jLabel2.setText("Send to Lab for testing");

        btnSend.setText("Send");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        jLabel4.setText("Track status of already sent requests");

        btnTrack.setText("Track");
        btnTrack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTrackActionPerformed(evt);
            }
        });

        jLabel5.setText("Accept donation to process");

        btnAccept.setText("Accept");
        btnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(478, 478, 478)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(networkLbl))
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 777, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel5))
            .addGroup(layout.createSequentialGroup()
                .addGap(316, 316, 316)
                .addComponent(btnSend, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(155, 155, 155)
                .addComponent(orgLbl))
            .addGroup(layout.createSequentialGroup()
                .addGap(316, 316, 316)
                .addComponent(btnTrack, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(317, 317, 317)
                .addComponent(btnAccept))
            .addComponent(backgroundLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 1450, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel4))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel3))
                    .addComponent(networkLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(544, 544, 544)
                .addComponent(btnSend))
            .addGroup(layout.createSequentialGroup()
                .addGap(544, 544, 544)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(orgLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(591, 591, 591)
                .addComponent(btnTrack))
            .addGroup(layout.createSequentialGroup()
                .addGap(497, 497, 497)
                .addComponent(btnAccept))
            .addComponent(backgroundLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 900, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addGap(591, 591, 591)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        int selectedRow = workRequestJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a donation to send for testing.");
            return;
        }
        try {
            btnSend.setEnabled(false);
            String acceptedBy = String.valueOf(workRequestJTable.getValueAt(selectedRow, 3));
            DoctorWorkRequest doctorReq = (DoctorWorkRequest) workRequestJTable.getValueAt(selectedRow, 0);
            String donationType = doctorReq.getDonationType();
            String testType = "";
            if (donationType.contains("Blood")) {
                testType = "Blood";
            }
            if (donationType.contains("Organ")) {
                testType = "Organ";
            }
            if (!acceptedBy.equals("null") && acceptedBy.equals(account.getEmployee().getName())) {
                for (Network n : system.getNetworkList()) {
                    if (n.getName().equals(network.getName())) {
                        for (Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()) {
                            for (Organization o : e.getOrganizationDirectory().getOrganizationList()) {
                                if (o instanceof LabOrganization) {
                                    LabWorkRequest req = new LabWorkRequest();
                                    req.setTestType(testType);
                                    req.setDescription(String.valueOf(workRequestJTable.getValueAt(selectedRow, 1)));
                                    req.setRequestedBy(acceptedBy);
                                    req.setStatus("Sent");
                                    req.setDonorEmailId(doctorReq.getDonorEmailId());
                                    req.setNetwork(network.getName());
                                    o.getWorkQueue().getLabWorkRequestList().add(req);
                                    JOptionPane.showMessageDialog(null, "Test request sent successfully");
                                    doctorReq.setStatus("Complete");
                                    break;
                                }
                            }
                        }
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "Please select a donation accepted by you to send for testing.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Something went wrong..");
        }
    }//GEN-LAST:event_btnSendActionPerformed

    private void btnAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptActionPerformed
        int selectedRow = workRequestJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a donation to accept.");
            return;
        }
        try {
            String acceptedBy = String.valueOf(workRequestJTable.getValueAt(selectedRow, 3));
            if (acceptedBy.equals("null")) {
                btnSend.setEnabled(true);
                WorkRequest request = (WorkRequest) workRequestJTable.getValueAt(selectedRow, 0);
                request.setReceiver(account);
                populateWorkRequestJTable();
            } else {
                JOptionPane.showMessageDialog(null, "Already Accepted");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Something went wrong..");
        }
    }//GEN-LAST:event_btnAcceptActionPerformed

    private void btnTrackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTrackActionPerformed
        try {
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            for (Network n : system.getNetworkList()) {
                for (Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()) {
                    for (Organization o : e.getOrganizationDirectory().getOrganizationList()) {
                        if (o instanceof LabOrganization) {
                            userProcessContainer.add("TrackRequestJPanel", new TrackRequestJPanel(userProcessContainer, account, enterprise, o.getWorkQueue().getLabWorkRequestList()));
                            layout.next(userProcessContainer);
                        }
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Something went wrong..");
        }
    }//GEN-LAST:event_btnTrackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backgroundLbl;
    private javax.swing.JButton btnAccept;
    private javax.swing.JButton btnSend;
    private javax.swing.JButton btnTrack;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel networkLbl;
    private javax.swing.JLabel orgLbl;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
