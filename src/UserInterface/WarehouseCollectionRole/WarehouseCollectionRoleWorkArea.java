/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.WarehouseCollectionRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Organization.WarehouseCollectionOrganization;
import Business.SendEmail.SendEmail;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.CollectDonationWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Image;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author deepankkhurana
 */
public class WarehouseCollectionRoleWorkArea extends javax.swing.JPanel {

    /**
     * Creates new form WarehouseCollectionRoleWorkArea
     */
    private final JPanel userProcessContainer;
    private final WarehouseCollectionOrganization organization;
    private final Enterprise enterprise;
    private final UserAccount userAccount;
    private final ArrayList<Organization> orgs;
    private final EcoSystem system;
    private final Network network;
    
    public WarehouseCollectionRoleWorkArea(JPanel userProcessContainer, UserAccount account, WarehouseCollectionOrganization organization, Enterprise enterprise, EcoSystem system, Network network) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.orgs = new ArrayList<>();
        this.system = system;
        this.network = network;
        
        try{
        valueLabel.setText(enterprise.getName());
        networkLbl.setText(network.getName());
        
        for(Network n : system.getNetworkList()){
            if(n.equals(network)){
                for(Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()){
                    for(Organization o : e.getOrganizationDirectory().getOrganizationList()){
                        orgs.add(o);
                    }
                }
            }
        }
        
        populateCollectionRequestJTable();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Something went wrong..");
        }
    }
    
    public void populateCollectionRequestJTable(){
        try{
        DefaultTableModel model = (DefaultTableModel)collectionRequestJTable.getModel();
        model.setRowCount(0);
        for(Organization org : orgs){
           if(org instanceof WarehouseCollectionOrganization) {
            for (CollectDonationWorkRequest request : org.getWorkQueue().getCollectionWorkRequestList()){
                Object[] row = new Object[7];
                row[0] = request;
                row[1] = request.getDonationType();
                row[2] = request.getDonorAddress();
                row[3] = request.getDonorContactNumber();
                row[4] = request.getRequestedBy();
                row[5] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
                row[6] = request.getStatus();
                model.addRow(row);
                } 
            }
        }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Something went wrong..");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        collectionRequestJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        networkLbl = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnAccept = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        backgroundLbl = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 140, 190));

        collectionRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Donor Name", "Donation Type", "Donor Address", "Donor Contact No.", "Requested By", "Accepted By", "Status"
            }
        ));
        jScrollPane1.setViewportView(collectionRequestJTable);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Donations Received at");

        valueLabel.setForeground(new java.awt.Color(255, 255, 255));
        valueLabel.setText("<EnterpriseName>");

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Network");

        networkLbl.setForeground(new java.awt.Color(255, 255, 255));
        networkLbl.setText("<NetworkName>");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Accept Collection Request");

        btnAccept.setText("Accept");
        btnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptActionPerformed(evt);
            }
        });

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Update Collection Details");

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        backgroundLbl.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(valueLabel)
                .addGap(341, 341, 341)
                .addComponent(jLabel2))
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 817, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel3))
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel4)
                .addGap(65, 65, 65)
                .addComponent(btnUpdate))
            .addGroup(layout.createSequentialGroup()
                .addGap(747, 747, 747)
                .addComponent(networkLbl))
            .addComponent(backgroundLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 1450, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addGap(264, 264, 264)
                .addComponent(btnAccept))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(valueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel4))
                    .addComponent(btnUpdate)))
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(networkLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(backgroundLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 900, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addGap(577, 577, 577)
                .addComponent(btnAccept))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptActionPerformed
        try{
        int selectedRow = collectionRequestJTable.getSelectedRow();
        String acceptedBy = String.valueOf(collectionRequestJTable.getValueAt(selectedRow, 5));
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a collection request to accept.");
        }
        else {
            if(acceptedBy.equals("null")){
                WorkRequest request = (WorkRequest)collectionRequestJTable.getValueAt(selectedRow, 0);
                CollectDonationWorkRequest req = (CollectDonationWorkRequest)collectionRequestJTable.getValueAt(selectedRow, 0);
                request.setReceiver(userAccount);
                request.setStatus("Pending");
                populateCollectionRequestJTable();
                
                //Send Email to donor
                String to = req.getDonorEmailId();
                String subject = "Donation collected!";
                String message =  "Thank you! Your donation is collected and will be stored with us until it is distributed. We appreciate you endeavor to support a needy!";

                String user = "aeddemogss@gmail.com";
                String pass = "aed_gss123";

                SendEmail.send(to,subject, message, user, pass);
            }
            else JOptionPane.showMessageDialog(null, "Already accepted.");
        }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Something went wrong..");
        }
    }//GEN-LAST:event_btnAcceptActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        try{
        int selectedRow = collectionRequestJTable.getSelectedRow();
        if (selectedRow >= 0){
            CollectDonationWorkRequest request = (CollectDonationWorkRequest)collectionRequestJTable.getValueAt(selectedRow, 0);
            String status = String.valueOf(collectionRequestJTable.getValueAt(selectedRow, 6));
            String acceptedBy = String.valueOf(collectionRequestJTable.getValueAt(selectedRow, 5));
            if(status.equals("Pending") && acceptedBy.equals(userAccount.getEmployee().getName())){
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                for(Organization o: orgs){
                    if(o instanceof WarehouseCollectionOrganization){
                        userProcessContainer.add("UpdateCollectionRequestJPanel", new UpdateCollectionRequestJPanel(userProcessContainer, userAccount, organization, request, system));
                        layout.next(userProcessContainer);
                        break;
                    }
                }
            }
            else JOptionPane.showMessageDialog(null, "Please select a 'Pending' collection request accepted by you to update.");
        }
        else JOptionPane.showMessageDialog(null, "Please select a collection request to update.");
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Something went wrong..");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backgroundLbl;
    private javax.swing.JButton btnAccept;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JTable collectionRequestJTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel networkLbl;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables
}
